#!/usr/bin/env php
<?php

/**
 * Require the vendor autoload (automatically generated by composer, the
 * dependency manager of php), this will handle the automatic imports all
 * across the application.
 */
require_once __DIR__ . '/../../../vendor/autoload.php';

/**
 * Initialize the application. The service container will hold
 * all additional services or elements that the system will need.
 */
$app = new Lookiero\Hiring\ConsoleTwitter\Applications\Console\Application(
    new Lookiero\Hiring\ConsoleTwitter\Shared\Application\Container()
);

/**
 * Bind the required Kernel to the application, in this case
 * i'm just binding the Console\Kernel so the application will
 * only run in cli environment.
 */
$app->kernel(Lookiero\Hiring\ConsoleTwitter\Applications\Console\Kernel::class);

/**
 * Load the configuration and run it into a loop... this will allow the
 * user to summit commands directly into the app without calling the entry
 * point each time.
 */
$app->configure([
    'app.providers' => [
        'db' => Lookiero\Hiring\ConsoleTwitter\Applications\Console\Providers\DatabaseProvider::class,
        'users' => Lookiero\Hiring\ConsoleTwitter\Applications\Console\Providers\UsersRepositoryProvider::class,
        'messages' => Lookiero\Hiring\ConsoleTwitter\Applications\Console\Providers\MessagesRepositoryProvider::class,
        'subscriptions' => Lookiero\Hiring\ConsoleTwitter\Applications\Console\Providers\SubscriptionsRepositoryProvider::class
    ],
    'cli.commands' => [
        'read' => Lookiero\Hiring\ConsoleTwitter\Applications\Console\Commands\Read::class,
        'post' => Lookiero\Hiring\ConsoleTwitter\Applications\Console\Commands\Post::class,
        'follow' => Lookiero\Hiring\ConsoleTwitter\Applications\Console\Commands\Follow::class,
        'wall' => Lookiero\Hiring\ConsoleTwitter\Applications\Console\Commands\Wall::class,
    ],
    'database' => [
        'name' => __DIR__ . '/../../../database.sqlite',
        'debug' => false
    ],
]);

do {

    /**
     * Run the application, and get the exit status code. 0 exit status means the
     * command was successful without any errors. A non-zero (1-255 values) exit
     * status means command was a failure.
     * @var int $status
     */
    $status = $app->run(
        new Lookiero\Hiring\ConsoleTwitter\Applications\Console\InputArguments(),
        new Lookiero\Hiring\ConsoleTwitter\Applications\Console\OutputWriter()
    );

} while ($status === 0);

exit($status);